from ...NXOpen import *
from ..UserDefinedTemplate import *

import typing
import enum

class InstantiationBuilder(Builder):
    def __init__(self) -> None: ...
    def LoadAuthoringPart(self, authoringPartName: str) -> Part:
        ...
    def GetExpressions(self) -> typing.List[Expression]:
        ...
    def GetMatchedExpression(self, originalExpression: Expression, canBeEdited: bool) -> Expression:
        ...
    def GetReferences(self) -> typing.List[NXObject]:
        ...
    def GetMatchedReference(self, originalReference: NXObject, isDirectionFlipped: bool) -> NXObject:
        ...
    def SetMatchedReference(self, originalReference: NXObject, matchedReference: NXObject, flipDirection: bool) -> None:
        ...
    Explosion: bool
    LayerNumber: int
    LayerOption: UserDefinedTemplate.InstantiationBuilder.JaUserdefinedtemplateLayerOption


    class JaUserdefinedtemplateLayerOption(enum.Enum):
        Work = 0
        Original = 1
        Specify = 2
    

class Instantiation(NXObject):
    def __init__(self) -> None: ...
    def GetFeature(self) -> Features.Feature:
        ...
    def GetExpressions(self) -> typing.List[Expression]:
        ...
    def GetPmis(self) -> typing.List[Annotations.Annotation]:
        ...


class Collection(TaggedObjectCollection):
    def EnumerateMoveNext(self, currentTag: Tag, state: bytes) -> int:
        ...
    def ToArray(self) -> typing.List[UserDefinedTemplate.Instantiation]:
        ...
    def __init__(self, owner: Part) -> None: ...
    def __init__(self) -> None: ...
    def CreateInstantiationBuilder(self, userDefinedTemplateInstantiation: UserDefinedTemplate.Instantiation) -> UserDefinedTemplate.InstantiationBuilder:
        ...
    def FindObject(self, journalIdentifier: str) -> TaggedObject:
        ...
    def Tag(self) -> Tag: ...



