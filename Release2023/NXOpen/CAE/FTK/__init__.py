from ....NXOpen import *
from ...CAE import *
from ..FTK import *

import typing
import enum

class SectionBasedMatrixRecord(CAE.FTK.BaseRecord):
    def __init__(self) -> None: ...
    def RemoveSectionData(self, sectionIndex: int) -> None:
        ...
    def GetApplicationData(self) -> CAE.FTK.IApplicationData:
        ...
    def SetApplicationData(self, applicationData: CAE.FTK.IApplicationData) -> None:
        ...
    SectionCount: int
    Title: str
    XCoordinateUnit: CAE.FTK.BaseUnit
    YCoordinateUnit: CAE.FTK.BaseUnit
    ZCoordinateUnit: CAE.FTK.BaseUnit


class RealSectionBasedMatrixRecord(CAE.FTK.SectionBasedMatrixRecord):
    def __init__(self) -> None: ...
    def AddSectionData(self, xCoordinatePoints: float, yCoordinatePoints: float, zCoordinatePoint: float) -> None:
        ...
    def GetSectionData(self, sectionIndex: int, xCoordinatePoints: float, yCoordinatePoints: float, zCoordinatePoints: float) -> None:
        ...


class OptionSetting(Utilities.NXRemotableObject):
    def __init__(self, owner: CAE.FTK.FTKManager) -> None: ...
    def GetRecordOptionData(self, recordName: str, functionType: CAE.XyFunctionGeneralType, abscissaType: CAE.AfuData.AbscissaType, xUnit: CAE.XyFunctionUnit, ordinateType: CAE.AfuData.OrdinateType, yUnit: CAE.XyFunctionUnit, yDenominatorUnit: CAE.XyFunctionUnit, sortValueType: bool) -> None:
        ...
    def SetRecordOptionData(self, recordName: str, functionType: CAE.XyFunctionGeneralType, abscissaType: CAE.AfuData.AbscissaType, xUnit: CAE.XyFunctionUnit, ordinateType: CAE.AfuData.OrdinateType, yUnit: CAE.XyFunctionUnit, yDenominatorUnit: CAE.XyFunctionUnit, sortValueType: bool) -> None:
        ...
    def GetHeaderFlag(self) -> bool:
        ...
    def SetHeaderFlag(self, addHeader: bool) -> None:
        ...
    def Tag(self) -> Tag: ...

    AbscissaSpacingType: CAE.AfuData.AbscissaType
    AbscissaUnit: CAE.XyFunctionUnit
    FunctionType: CAE.XyFunctionGeneralType
    OrdinateDataType: CAE.AfuData.OrdinateType
    OrdinateDenominatorUnit: CAE.XyFunctionUnit
    OrdinateSecondNumeratorUnit: CAE.XyFunctionUnit
    OrdinateUnit: CAE.XyFunctionUnit
    RecordName: str
    SortValueType: bool


class Op2Record(CAE.FTK.BaseRecord):
    def __init__(self) -> None: ...
    def ListInformation(self, fileName: str, listInfo: bool, listData: bool) -> None:
        ...


class Op2FileManager(Utilities.NXRemotableObject):
    def __init__(self, owner: CAE.FTK.DataManager) -> None: ...
    def LoadFile(self, op2FileName: str, containerType: CAE.FTK.DataManager.FileContainerType) -> None:
        ...
    def UnloadFile(self, op2FileName: str, containerType: CAE.FTK.DataManager.FileContainerType) -> None:
        ...
    def DeleteFile(self, op2FileName: str) -> None:
        ...
    def GetLoadedFiles(self) -> str:
        ...
    def GetAllDatasetNamesInFile(self, op2FileName: str) -> str:
        ...
    def GetAllRecordNamesInDataset(self, op2FileName: str, datasetName: str) -> str:
        ...
    def GetRecord(self, op2FileName: str, datasetName: str, recordName: str) -> CAE.FTK.Op2Record:
        ...
    def Tag(self) -> Tag: ...



class NamespaceDoc(System.Object):
    def __init__(self) -> None: ...


class MatrixPlotRecord(CAE.FTK.BaseRecord):
    def __init__(self) -> None: ...
    def GetRowLabels(self) -> str:
        ...
    def SetRowLabels(self, rowLabels: str) -> None:
        ...
    def GetColumnLabels(self) -> str:
        ...
    def SetColumnLabels(self, columnLabels: str) -> None:
        ...
    def GetData(self, realData: float, imagData: float) -> None:
        ...
    def SetData(self, realData: float, imagData: float) -> None:
        ...
    def GetRowCount(self) -> int:
        ...
    def GetColumnCount(self) -> int:
        ...
    def GetApplicationData(self) -> CAE.FTK.IApplicationData:
        ...
    def SetApplicationData(self, applicationData: CAE.FTK.IApplicationData) -> None:
        ...
    DataUnit: CAE.FTK.BaseUnit
    Title: str


class IRecordWithZValue():
    Unit: CAE.FTK.BaseUnit
    Value: float


class IApplicationDataOwner():
    def GetApplicationData(self) -> CAE.FTK.IApplicationData:
        ...
    def SetApplicationData(self, applicationData: CAE.FTK.IApplicationData) -> None:
        ...


class IApplicationData():
    def AskNumberOfDisplayableAttributes(self) -> int:
        ...
    def AskNthDisplayableAttributeName(self, nth: int) -> str:
        ...
    def AskNthDisplayableAttributeValue(self, nth: int) -> str:
        ...


class FTKManager(Utilities.NXRemotableObject):
    def __init__(self, owner: Session) -> None: ...
    def Tag(self) -> Tag: ...

    OptionSetting: CAE.FTK.OptionSetting


class ExportFilesParameter(TransientObject):
    def __init__(self, ptr: int) -> None: ...
    def GetIsCertainHeaderExportRequired(self, whichHeader: CAE.FTK.ExportFilesParameter.HeaderOptions) -> bool:
        ...
    def SetIsCertainHeaderExportRequired(self, whichHeader: CAE.FTK.ExportFilesParameter.HeaderOptions, required: bool) -> None:
        ...
    def GetFileNames(self) -> str:
        ...
    def SetFileNames(self, fileNames: str) -> None:
        ...
    def FreeResource(self) -> None:
        ...
    def GetCustomRecordNames(self) -> str:
        ...
    def SetCustomRecordNames(self, customRecordNames: str) -> None:
        ...
    IsHeaderExportRequired: bool
    NumberFormat: CAE.NumberFormat
    OverrideSetting: CAE.FTK.ExportFilesParameter.OverrideOption


    class OverrideOption(enum.Enum):
        Rename = 0
        Append = 1
        Replace = 2
        Skip = 3
    

    class HeaderOptions(enum.Enum):
        FileDescription = 0
        General = 1
        Abscissa = 2
        Ordinate = 3
        AbscissaZ = 4
        ApplicationSpecific = 5
    

class DataManager(Utilities.NXRemotableObject):
    def __init__(self, owner: Session) -> None: ...
    def CreateArrayRecord2d(self, titleName: str, legendName: str, numPoints: int) -> CAE.FTK.ArrayRecord2D:
        ...
    def CreateArrayRecord2dEvenSpacing(self, titleName: str, legendName: str) -> CAE.FTK.ArrayRecord2DEven:
        ...
    def CreateArrayRecord3d(self, titleName: str, legendName: str, numPoints: int) -> CAE.FTK.ArrayRecord3D:
        ...
    def DeleteRecord(self, deletedRecord: CAE.FTK.BaseRecord) -> None:
        ...
    def CreateArrayUnit(self, nxUnit: Unit) -> CAE.FTK.BaseUnit:
        ...
    def CreateArrayUnit(self, nxUnit: Unit, aliasMeasureName: str, localizedAliasMeasureName: str) -> CAE.FTK.BaseUnit:
        ...
    def CreateUnitlessUnit(self, measureName: str, localizedMeasureName: str) -> CAE.FTK.BaseUnit:
        ...
    def CreateArrayUnit(self, numeratorUnit: CAE.FTK.BaseUnit, denominatorUnit: CAE.FTK.BaseUnit) -> CAE.FTK.BaseUnit:
        ...
    def DeleteArrayUnit(self, deletedUnit: CAE.FTK.BaseUnit) -> None:
        ...
    def CreateRealMatrixRecord(self, titleName: str, legendName: str) -> CAE.FTK.RealSectionBasedMatrixRecord:
        ...
    def CreateComplexMatrixRecord(self, titleName: str, legendName: str) -> CAE.FTK.ComplexSectionBasedMatrixRecord:
        ...
    def CreateMatrixPlotRecord(self, titleName: str, legendName: str) -> CAE.FTK.MatrixPlotRecord:
        ...
    def CreateArrayRecord2dWithZValue(self, titleName: str, legendName: str, numPoints: int) -> CAE.FTK.ArrayRecord2DWithZValue:
        ...
    def CreateArrayRecord2dEvenSpacingWithZValue(self, titleName: str, legendName: str) -> CAE.FTK.ArrayRecord2DEvenWithZValue:
        ...
    def Tag(self) -> Tag: ...

    AfuFileManager: CAE.FTK.AfuFileManager
    Op2FileManager: CAE.FTK.Op2FileManager


    class FileContainerType(enum.Enum):
        None = 0
        AssociatedContainer = 1
        ResultContainer = 2
        UserContainer = 3
        All = 4
    

    class AfuRecordZValue(enum.Enum):
        SelectionOrder = 0
        General = 1
        Rpm = 2
        Time = 3
        Order = 4
    

class ComplexSectionBasedMatrixRecord(CAE.FTK.SectionBasedMatrixRecord):
    def __init__(self) -> None: ...
    def AddSectionData(self, xCoordinatePoints: float, yCoordinateReal: float, yCoordinateImag: float, zCoordinatePoint: float) -> None:
        ...
    def GetSectionData(self, sectionIndex: int, xCoordinatePoints: float, yCoordinateReal: float, yCoordinateImag: float, zCoordinatePoints: float) -> None:
        ...


class BaseUnit(NXObject):
    def __init__(self) -> None: ...
    def SetMeasureName(self, measureName: str) -> None:
        ...
    def SetUnitName(self, unitName: str) -> None:
        ...
    def GetConstituentUnitsCount(self) -> int:
        ...
    def GetConstituentUnit(self, nthConstituentUnitIndex: int) -> CAE.FTK.BaseUnit:
        ...
    def SetNxUnit(self, nxUnit: Unit) -> None:
        ...


class BaseRecord(NXObject):
    def __init__(self) -> None: ...
    def GetAbscissaUnit(self) -> CAE.FTK.BaseUnit:
        ...
    def GetOrdinateUnit(self) -> CAE.FTK.BaseUnit:
        ...
    def GetPointLabels(self) -> str:
        ...
    def GetDescription(self) -> str:
        ...
    def SetDescription(self, description: str) -> None:
        ...
    LegendName: str
    ResultInformation: str


class ArrayRecord3D(CAE.FTK.ArrayRecord2D):
    def __init__(self) -> None: ...
    def SetZCoordinateUnit(self, zCoordinateUnit: CAE.FTK.BaseUnit) -> None:
        ...
    def GetZCoordinateUnit(self) -> CAE.FTK.BaseUnit:
        ...
    def SetZCoordinatePoints(self, zCoordinatePoints: float) -> None:
        ...


class ArrayRecord2DWithZValue(CAE.FTK.ArrayRecord2D):
    def __init__(self) -> None: ...
    Unit: CAE.FTK.BaseUnit
    Value: float


class ArrayRecord2DEvenWithZValue(CAE.FTK.ArrayRecord2DEven):
    def __init__(self) -> None: ...
    Unit: CAE.FTK.BaseUnit
    Value: float


class ArrayRecord2DEven(CAE.FTK.ArrayRecord2D):
    def __init__(self) -> None: ...
    def SetEvenRealData(self, xMinimum: float, xIncrement: float, yCoordinatePoints: float) -> None:
        ...
    def GetEvenRealData(self, xMinimum: float, xIncrement: float) -> float:
        ...
    def SetEvenComplexData(self, xMinimum: float, xIncrement: float, yCoordinateReal: float, yCoordinateImag: float) -> None:
        ...
    def GetEvenComplexData(self, xMinimum: float, xIncrement: float, yCoordinateImag: float) -> float:
        ...


class ArrayRecord2D(CAE.FTK.BaseRecord):
    def __init__(self) -> None: ...
    def SetXCoordinateUnit(self, xCoordinateUnit: CAE.FTK.BaseUnit) -> None:
        ...
    def GetXCoordinateUnit(self) -> CAE.FTK.BaseUnit:
        ...
    def SetYCoordinateUnit(self, yCoordinateUnit: CAE.FTK.BaseUnit) -> None:
        ...
    def GetYCoordinateUnit(self) -> CAE.FTK.BaseUnit:
        ...
    def SetRealData(self, xCoordinatePoints: float, yCoordinatePoints: float) -> None:
        ...
    def GetRealData(self, yCoordinatePoints: float) -> float:
        ...
    def SetComplexData(self, xCoordinatePoints: float, yCoordinateReal: float, yCoordinateImag: float) -> None:
        ...
    def GetComplexData(self, yCoordinateReal: float, yCoordinateImag: float) -> float:
        ...
    def GetTitle(self) -> str:
        ...
    def SetPointLabels(self, pointLabels: str) -> None:
        ...
    def GetApplicationData(self) -> CAE.FTK.IApplicationData:
        ...
    def SetApplicationData(self, applicationData: CAE.FTK.IApplicationData) -> None:
        ...


class AfuFileManager(Utilities.NXRemotableObject):
    def __init__(self, owner: CAE.FTK.DataManager) -> None: ...
    def LoadFile(self, afuFileName: str, containerType: CAE.FTK.DataManager.FileContainerType) -> None:
        ...
    def UnloadFile(self, afuFileName: str, containerType: CAE.FTK.DataManager.FileContainerType) -> None:
        ...
    def DeleteFile(self, afuFileName: str) -> None:
        ...
    def GetLoadedFiles(self) -> str:
        ...
    def GetAllRecordNamesInFile(self, afuFileName: str) -> str:
        ...
    def GetRecord(self, afuFileName: str, recordName: str) -> CAE.FTK.BaseRecord:
        ...
    def Tag(self) -> Tag: ...



