from ....NXOpen import *
from ...Diagramming import *
from ..Geometry import *

import typing
import enum

class RectangleCollection(TaggedObjectCollection):
    def EnumerateMoveNext(self, currentTag: Tag, state: bytes) -> int:
        ...
    def ToArray(self) -> typing.List[Diagramming.Geometry.Rectangle]:
        ...
    def __init__(self, owner: Diagramming.DiagrammingManager) -> None: ...
    def __init__(self) -> None: ...
    def CreateRectangleBuilder(self, rectangleGeometry: Diagramming.Geometry.Rectangle) -> Diagramming.Geometry.RectangleBuilder:
        ...
    def FindObject(self, journalIdentifier: str) -> Diagramming.Geometry.Rectangle:
        ...
    def Tag(self) -> Tag: ...



class RectangleBuilder(Diagramming.Geometry.BaseGeometryBuilder):
    def __init__(self) -> None: ...
    FirstCorner: Diagramming.LocationBuilder
    SecondCorner: Diagramming.LocationBuilder


class Rectangle(Diagramming.Geometry.BaseGeometry):
    def __init__(self) -> None: ...


class PointCollection(TaggedObjectCollection):
    def EnumerateMoveNext(self, currentTag: Tag, state: bytes) -> int:
        ...
    def ToArray(self) -> typing.List[Diagramming.Geometry.Point]:
        ...
    def __init__(self, owner: Diagramming.DiagrammingManager) -> None: ...
    def __init__(self) -> None: ...
    def CreatePointBuilder(self, pointGeometry: Diagramming.Geometry.Point) -> Diagramming.Geometry.PointBuilder:
        ...
    def FindObject(self, journalIdentifier: str) -> Diagramming.Geometry.Point:
        ...
    def Tag(self) -> Tag: ...



class PointBuilder(Diagramming.Geometry.BaseGeometryBuilder):
    def __init__(self) -> None: ...
    Coordinate: Diagramming.LocationBuilder


class Point(Diagramming.Geometry.BaseGeometry):
    def __init__(self) -> None: ...


class NamespaceDoc(System.Object):
    def __init__(self) -> None: ...


class LineCollection(TaggedObjectCollection):
    def EnumerateMoveNext(self, currentTag: Tag, state: bytes) -> int:
        ...
    def ToArray(self) -> typing.List[Diagramming.Geometry.Line]:
        ...
    def __init__(self, owner: Diagramming.DiagrammingManager) -> None: ...
    def __init__(self) -> None: ...
    def CreateLineBuilder(self, lineGeometry: Diagramming.Geometry.Line) -> Diagramming.Geometry.LineBuilder:
        ...
    def FindObject(self, journalIdentifier: str) -> Diagramming.Geometry.Line:
        ...
    def Tag(self) -> Tag: ...



class LineBuilder(Diagramming.Geometry.BaseGeometryBuilder):
    def __init__(self) -> None: ...
    End: Diagramming.LocationBuilder
    Start: Diagramming.LocationBuilder


class Line(Diagramming.Geometry.BaseGeometry):
    def __init__(self) -> None: ...


class BaseGeometryBuilder(Diagramming.SheetElementBuilder):
    def __init__(self) -> None: ...


class BaseGeometry(Diagramming.SheetElement):
    def __init__(self) -> None: ...


class ArcCollection(TaggedObjectCollection):
    def EnumerateMoveNext(self, currentTag: Tag, state: bytes) -> int:
        ...
    def ToArray(self) -> typing.List[Diagramming.Geometry.Arc]:
        ...
    def __init__(self, owner: Diagramming.DiagrammingManager) -> None: ...
    def __init__(self) -> None: ...
    def CreateArcBuilder(self, arcGeometry: Diagramming.Geometry.Arc) -> Diagramming.Geometry.ArcBuilder:
        ...
    def FindObject(self, journalIdentifier: str) -> Diagramming.Geometry.Arc:
        ...
    def Tag(self) -> Tag: ...



class ArcBuilder(Diagramming.Geometry.BaseGeometryBuilder):
    def __init__(self) -> None: ...
    Center: Diagramming.LocationBuilder
    EndAngle: float
    Radius: float
    StartAngle: float


class Arc(Diagramming.Geometry.BaseGeometry):
    def __init__(self) -> None: ...


