from ...NXOpen import *
from ..ElectricalRouting import *

import typing
import enum

class RoutingManager(Utilities.NXRemotableObject):
    def __init__(self, owner: Session) -> None: ...
    def GetRoutingManager(self, owner: Session) -> ElectricalRouting.RoutingManager:
        ...
    def SetActiveWiringComponent(self, rootPart: Part, activeWiringComp: Assemblies.Component) -> None:
        ...
    def GetWiringComponents(self, rootPart: Assemblies.Component) -> typing.List[Assemblies.Component]:
        ...
    def Tag(self) -> Tag: ...

    BuilderFactory: ElectricalRouting.BuilderFactory


class BuilderFactory(Utilities.NXRemotableObject):
    def __init__(self, owner: ElectricalRouting.RoutingManager) -> None: ...
    def CreateActiveWiringComponentBuilder(self, part: Part, workOcc: Assemblies.Component) -> ElectricalRouting.ActiveWiringComponentBuilder:
        ...
    def Tag(self) -> Tag: ...



class ActiveWiringComponentBuilder(Builder):
    def __init__(self) -> None: ...
    def CreateWiringComponent(self) -> Assemblies.Component:
        ...
    def CreateWiringComponent(self, componentName: str) -> Assemblies.Component:
        ...
    def GetPartOccOfWCInDisplayedPart(self, tagToBeMapped: Assemblies.Component) -> Assemblies.Component:
        ...
    def GetPartOccOfWCInWorkPart(self, tagToBeMapped: Assemblies.Component) -> Assemblies.Component:
        ...
    ActiveWiringComp: Assemblies.Component
    SelectPart: Assemblies.SelectComponent


